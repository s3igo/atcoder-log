{
    "use itertools": {
        "prefix": ";it",
        "body": [
            "use itertools::*;"
        ],
        "description": "bring all items from itertools"
    },
    "is_palindrome": {
        "prefix": ";is_pal",
        "body": [
            "fn is_palindrome(s: &str) -> bool {",
            "\tlet s = s.chars().collect::<Vec<char>>();",
            "\ts == s.iter().rev().copied().collect::<Vec<char>>()",
            "}"
        ],
        "description": "check if a string is a palindrome(回文)"
    },
    "is_sorted": {
        "prefix": ";is_sort",
        "body": [
            ".tuple_windows().all(|(a, b)| a <= b)"
        ],
        "description": "check if a slice is sorted"
    },
    "Print Yes or No": {
        "prefix": ";printyesno",
        "body": [
            "println!(\"{}\", if cond { \"Yes\" } else { \"No\" });"
        ],
        "description": "Print Yes or No"
    },
}
